
float cubic_in_out(float t) {
    t = 1.0 - t;
    t = 1.0 - t*t;
    return t*t;
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Normalized pixel coordinates (from 0 to 1)
    vec2 uv = fragCoord/iResolution.xy;
    
    float height = cubic_in_out(clamp((uv.y - 0.1) * 3.0, 0.0, 1.0));

    vec3 col = mix(
        vec3(0.6, 0.6, 1.0),
        vec3(0.6, 0.53, 0.85),
        height
    ) + vec3(
        pow(1.0 - uv.y, 8.0) * 0.2,
        pow(1.0 - uv.y, 16.0) * 0.2,
        0.0
    );

    // Output to screen
    fragColor = vec4(col,1.0);
}



float cubic_in_out(float t) {
    t = 1.0 - t;
    t = 1.0 - t*t;
    return t*t;
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Normalized pixel coordinates (from 0 to 1)
    vec2 uv = fragCoord/iResolution.xy;
    
    //float height = cubic_in_out(clamp((uv.y - 0.1) * 3.0, 0.0, 1.0));
    float height = uv.y;

    vec3 col0 = mix(
        vec3(0.3, 0.0, 1.0),
        vec3(1.0, 0.6, 0.0),
        height
    );
    vec3 col1 = mix(
        col0,
        vec3(0.5),
        cubic_in_out(abs(height-0.5)*2.0) * 0.9
    );

    // Output to screen
    fragColor = vec4(col1,1.0);
}




float cubic_in_out(float t) {
    t = 1.0 - t;
    t = 1.0 - t*t;
    return t*t;
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Normalized pixel coordinates (from 0 to 1)
    vec2 uv = fragCoord/iResolution.xy;
    
    //float height = cubic_in_out(clamp((uv.y - 0.1) * 3.0, 0.0, 1.0));
    float height = uv.y;

    vec3 col0 = mix(
        vec3(0.3, 0.0, 1.0),
        //vec3(1.0, 0.6, 0.0),
        vec3(0.6, 0.55, 0.3),
        height
    );
    vec3 col1 = mix(
        vec3(0.5),
        col0,
        cubic_in_out(abs(height-0.5)*2.0)
    ) * height + vec3(height/2.0);

    // Output to screen
    fragColor = vec4(col1,1.0);
}



float cubic_in_out(float t) {
    t = 1.0 - t;
    t = 1.0 - t*t;
    return t*t;
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Normalized pixel coordinates (from 0 to 1)
    vec2 uv = fragCoord/iResolution.xy;
    
    //float height = cubic_in_out(clamp((uv.y - 0.1) * 3.0, 0.0, 1.0));
    float height = uv.y;

    vec3 col0 = mix(
        vec3(1.0, 1.0, 1.0),
        //vec3(1.0, 0.6, 0.0),
        vec3(1.0, 1.0, 0.7),
        1.0-height
    );
    vec3 col1 = mix(
        vec3(1.0, 0.8, 0.7),
        col0,
        1.0-pow(1.0-height, 4.0)
    );

    // Output to screen
    fragColor = vec4(col1,1.0);
}